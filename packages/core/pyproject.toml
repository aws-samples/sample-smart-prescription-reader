[project]
name = "smart-prescription-reader"
version = "1.0.0"
description = "Extract structured data from prescription images"
requires-python = ">=3.9,<4"
readme = 'README.md'
dependencies = [
    "aws-lambda-powertools[parser]>=3.8.0",
    "boto3>=1.37.31",
    "botocore>=1.37.31",
    "jinja2>=3.1.4",
    "json-repair>=0.40.0",
    "jsonschema>=4.23.0",
    "pydantic>=2.5.2",
    "tenacity>=9.0.0",
]

[tool.hatch.build.targets.wheel]
packages = ["smart_prescription_reader"]

[tool.hatch.metadata]
allow-direct-references = true

[dependency-groups]
dev = [
    "autopep8>=2.3.1",
    "aws-lambda-powertools[aws-sdk]>=3.8.0",
    "ruff>=0.8.2",
    "pytest>=8.3.5",
    "pytest-sugar>=1.0.0",
    "moto[all]>=5.0.16",
    "boto3-stubs-lite[bedrock-runtime,dynamodb,s3,ssm,stepfunctions,textract]>=1.37.31",
    "datamodel-code-generator[graphql]>=0.28.4",
    "python-dotenv>=1.1.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
exclude = [
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "dist",
]

line-length = 120
indent-width = 4

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = []

fixable = ["ALL"]
unfixable = []

[tool.pytest.ini_options]
markers = [
    "integration: marks tests as integration tests",
]
testpaths = ["tests"]
addopts = "-m 'not integration'"
